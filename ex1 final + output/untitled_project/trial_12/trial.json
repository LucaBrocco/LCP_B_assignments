{"trial_id": "12", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "activation_0", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid", "elu"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dropout_rate_0", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.3, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_1", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid", "elu"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dropout_rate_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.3, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_2", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid", "elu"], "ordered": false}}, {"class_name": "Float", "config": {"name": "dropout_rate_2", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.3, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "Adam", "conditions": [], "values": ["Adam", "RMSprop", "Nesterov"], "ordered": false}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 1e-06, "conditions": [], "min_value": 1e-06, "max_value": 0.1, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "momentum", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 1.0, "step": null, "sampling": "linear"}}], "values": {"activation_0": "elu", "dropout_rate_0": 0.2, "activation_1": "tanh", "dropout_rate_1": 0.0, "activation_2": "sigmoid", "dropout_rate_2": 0.0, "optimizer": "Nesterov", "learning_rate": 3.1918951212770214e-05, "momentum": 0.38489656046763376}}, "metrics": {"metrics": {"accuracy": {"direction": "max", "observations": [{"value": [0.4925000071525574], "step": 387}]}, "loss": {"direction": "min", "observations": [{"value": [0.6938005685806274], "step": 387}]}, "val_accuracy": {"direction": "max", "observations": [{"value": [0.4749999940395355], "step": 387}]}, "val_loss": {"direction": "min", "observations": [{"value": [0.6946817636489868], "step": 387}]}}}, "score": 0.4749999940395355, "best_step": 387, "status": "COMPLETED", "message": "Traceback (most recent call last):\n  File \"/home/lucab/Desktop/LCP B course/coding_env/lib/python3.12/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/lucab/Desktop/LCP B course/coding_env/lib/python3.12/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucab/Desktop/LCP B course/coding_env/lib/python3.12/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucab/Desktop/LCP B course/coding_env/lib/python3.12/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucab/Desktop/LCP B course/coding_env/lib/python3.12/site-packages/keras_tuner/src/engine/hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/lucab/Desktop/LCP B course/coding_env/lib/python3.12/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/home/lucab/Desktop/LCP B course/coding_env/lib/python3.12/site-packages/keras/src/utils/traceback_utils.py\", line 119, in error_handler\n    filtered_tb = _process_traceback_frames(e.__traceback__)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: TensorFlowTrainer.fit() got an unexpected keyword argument 'use_multiprocessing'\n"}